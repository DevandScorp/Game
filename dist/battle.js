!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}n.r(t);var r=function(){function e(t,n,i,r,s,o,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pos=n,this.size=i,this.speed="number"==typeof r?r:0,this.frames=s,this.index=0,this.url=t,this.dir=o||"horizontal",this.once=a}var t,n,r;return t=e,(n=[{key:"update",value:function(e){this.index+=this.speed*e}},{key:"render",value:function(e,t){var n;if(this.speed>0){var i=this.frames.length,r=Math.floor(this.index);if(n=this.frames[r%i],this.once&&r>=i)return void(this.done=!0)}else n=0;var s=this.pos[0];s+=n*this.size[0],e.drawImage(t.get(this.url),s,this.pos[1],this.size[0],this.size[1],0,0,this.size[0],this.size[1])}}])&&i(t.prototype,n),r&&i(t,r),e}();function s(e){var t=new(window.AudioContext||window.webkitAudioContext),n=t.createBufferSource();fetch(e).then(function(e){return e.arrayBuffer()}).then(function(e){t.decodeAudioData(e,function(e){n.buffer=e,n.connect(t.destination)})}).then(function(){return n.start(0)}).catch(function(e){return console.log(e)})}function o(e,t){e.style.width="".concat(t/2,"%"),e.innerHTML="".concat(1*t,"%")}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function h(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var l=function(){function e(t,n,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.resources=i,this.canvas=t,this.ctx=n,this.bulletSpeed=500,this.bullets=[],this.enemy=e.getEnemySprites(),this.isDamaged=!1,this.isHealed=!1,this.player={sprite:new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5,6])},this.player.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.damage={pos:[25,this.canvas.height/2-this.player.sprite.size[0]/2],sprite:new r("img/explosion.png",[0,0],[256,256],15,[0,1,2,3,4,5,6])},this.heal={pos:[25,this.canvas.height/2-this.player.sprite.size[0]/2],sprite:new r("img/heal.png",[0,0],[256,256],10,[0,1,2,3,4,5,6])},this.orkHealth=100,this.heroHealth=100,this.heroClassElement=document.querySelector(".heroLife"),this.orkClassElement=document.querySelector(".orkLife")}var t,n,i;return t=e,i=[{key:"getEnemySprites",value:function(){var t={pos:[0,0],sprite:new r("img/orkSprite.png",[220*e.getRandomInt(0,3),935],[220,240])},n={pos:[0,0],sprite:new r("img/orkSprite.png",[85*e.getRandomInt(0,3),0],[85,120])},i={pos:[0,0],sprite:new r("img/orkSprite.png",[85*e.getRandomInt(0,3),120],[85,120])},s={pos:[0,0],sprite:new r("img/orkSprite.png",[219*e.getRandomInt(0,3),240],[219,282])},o={pos:[0,0],sprite:new r("img/orkSprite.png",[165*e.getRandomInt(0,3),720],[165,210])};return[i,n,s,t,{pos:[0,0],sprite:new r("img/orkSprite.png",[220*e.getRandomInt(0,3),525],[220,195])},o]}},{key:"getRandomInt",value:function(e,t){return Math.floor(Math.random()*(t-e))+e}}],(n=[{key:"makeShot",value:function(){var e=this,t=this.player.pos[0]+this.player.sprite.size[0]/2,n=this.player.pos[1];this.player.sprite=new r("img/knightAttack.png",[0,0],[256,256],15,[0,1,2,3,4,5]),setTimeout(function(){e.player.sprite=new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5]),e.bullets.push({pos:[t,n],sprite:new r("img/fire.png",[0,0],[256,256],10,[0,1,2,3,4,5])})},300),s("../game/sounds/iceball.wav")}},{key:"attackHero",value:function(){var e=this;this.heroHealth-=25,console.log(this.heroHealth),o(this.heroClassElement,this.heroHealth),this.isDamaged=!0,this.player.sprite=new r("img/damage.png",[0,0],[256,256],15,[0,1,2,3,4,5]),setTimeout(function(){e.player.sprite=new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5]),e.isDamaged=!1},300),s("../game/sounds/qubodup-BangShort.ogg")}},{key:"healHero",value:function(){var e=this;100!==this.heroHealth&&(this.heroHealth+=25,o(this.heroClassElement,this.heroHealth),console.log(this.heroHealth)),this.isHealed=!0,setTimeout(function(){e.isHealed=!1},1e3),s("../game/sounds/blessing.ogg")}},{key:"updateEntities",value:function(e){this.player.sprite.update(e),this.enemy.forEach(function(t){return t.sprite.update(e)}),this.heal.sprite.update(e),this.damage.sprite.update(e);for(var t=0;t<this.bullets.length;t+=1)this.bullets[t].pos[0]+=this.bulletSpeed*e,this.bullets[t].sprite.update(e),this.bullets[t].pos[0]>=this.enemy[2].pos[0]&&(this.orkHealth-=25,console.log(this.orkHealth),o(this.orkClassElement,this.orkHealth),this.bullets.splice(t,1),t-=1);this.heroHealth||(alert("Lose"),this.reset()),this.orkHealth||(alert("Win"),this.reset())}},{key:"renderEntity",value:function(e){this.ctx.save(),this.ctx.translate(e.pos[0],e.pos[1]),e.sprite.render(this.ctx,this.resources),this.ctx.restore()}},{key:"render",value:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.renderEntity(this.player),this.isDamaged&&this.renderEntity(this.damage),this.isHealed&&this.renderEntity(this.heal),this.renderEntities(this.enemy),this.renderEntities(this.bullets)}},{key:"renderEntities",value:function(e){for(var t=0;t<e.length;t+=1)this.renderEntity(e[t])}},{key:"reset",value:function(){var t;this.heroHealth=100,this.orkHealth=100,this.bullets=[],this.player.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.damage.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.heal.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.enemy.splice(0,this.enemy.length),(t=this.enemy).push.apply(t,a(e.getEnemySprites()));var n=this.enemy[3].sprite.size[0],i=this.enemy[3].sprite.size[1],r=this.canvas.width,s=this.canvas.height;this.orkClassElement.style.width="100%",this.orkClassElement.innerHTML="100%",this.heroClassElement.style.width="100%",this.heroClassElement.innerHTML="100%",this.enemy[3].pos=[r-n-200,s/2-i/2],this.enemy[1].pos=[r-n-180,s/2-i/2+180],this.enemy[0].pos=[r-n-90,s/2-i/2+180],this.enemy[2].pos=[r-n-360,s/2-i/2+20],this.enemy[5].pos=[r-n-45,s/2-i/2+40],this.enemy[4].pos=[r-n-210,s/2-i/2-80]}}])&&h(t.prototype,n),i&&h(t,i),e}(),u={},c=[];function p(){var e=!0;return Object.keys(u).forEach(function(t){u.hasOwnProperty(t)&&!u[t]&&(e=!1)}),e}function d(e){if(u[e])return u[e];var t=new Image;t.onload=function(){u[e]=t,p()&&c.forEach(function(e){e()})},u[e]=!1,t.src=e}var f={load:function(e){e instanceof Array?e.forEach(function(e){d(e)}):d(e)},get:function(e){return u[e]},onReady:function(e){c.push(e)},isReady:p};function g(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],i=!0,r=!1,s=void 0;try{for(var o,a=e[Symbol.iterator]();!(i=(o=a.next()).done)&&(n.push(o.value),!t||n.length!==t);i=!0);}catch(e){r=!0,s=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw s}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var m=document.createElement("canvas");m.width=.75*window.innerWidth,m.height=.75*window.innerHeight,document.body.appendChild(m);var y=m.getContext("2d"),v=new l(m,y,f),k=0;function w(){var e=Date.now(),t=(e-k)/1e3;v.updateEntities(t),v.render(),k=e,requestAnimationFrame(w)}f.load(["img/heal.png","img/explosion.png","img/damage.png","img/knight.png","img/fire.png","img/knightAttack.png","img/orkSprite.png"]),f.onReady(function(){v.reset(),k=Date.now(),w()}),document.getElementById("task").onclick=function(){var e,t,n,i,r,s=g(function(){var e=["*","-","+"],t=l.getRandomInt(1,10),n=l.getRandomInt(1,10),i=e[l.getRandomInt(0,e.length)],r=0;switch(i){case"*":r=t*n;break;case"-":r=t-n;break;case"+":r=t+n}return["Solve task: ",t,n,i,r]}(),5);e=s[0],t=s[1],n=s[2],r=s[3],i=s[4],document.getElementById("taskModelLabel").innerHTML="".concat(e).concat(t).concat(r).concat(n),document.getElementById("hidden-result").value="".concat(i)},document.getElementById("submit").onclick=function(){document.getElementById("hidden-result").value===document.getElementById("exampleInputEmail1").value?v.makeShot():v.attackHero()},window.addEventListener("keydown",function(e){"Space"===e.code&&v.healHero()},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmVlbi9nYW1lL2pzL3Nwcml0ZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyZWVuL2dhbWUvanMvbXVzaWNIYW5kbGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JlZW4vZ2FtZS9qcy9jaGFuZ2VIZWFsdGhCYXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmVlbi9nYW1lL2pzL2ZpZ2h0SW50ZXJmYWNlLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JlZW4vZ2FtZS9qcy9yZXNvdXJjZUhhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmVlbi9nYW1lL2pzL2FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zaW1wbGVNYXRoL2NyZWF0ZVRhc2suanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJTcHJpdGUiLCJ1cmwiLCJwb3MiLCJzaXplIiwic3BlZWQiLCJmcmFtZXMiLCJkaXIiLCJvbmNlIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsImluZGV4IiwiZHQiLCJ0eCIsInJlc291cmNlcyIsImZyYW1lIiwibWF4IiwibGVuZ3RoIiwiaWR4IiwiTWF0aCIsImZsb29yIiwiZG9uZSIsIngiLCJkcmF3SW1hZ2UiLCJtYWtlQVNvdW5kIiwicGF0aCIsImF1ZGlvQ3R4Iiwid2luZG93IiwiQXVkaW9Db250ZXh0Iiwid2Via2l0QXVkaW9Db250ZXh0Iiwic291cmNlIiwiY3JlYXRlQnVmZmVyU291cmNlIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJhcnJheUJ1ZmZlciIsImJ1ZmZlciIsImRlY29kZUF1ZGlvRGF0YSIsImRlY29kZWREYXRhIiwiY29ubmVjdCIsImRlc3RpbmF0aW9uIiwic3RhcnQiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsIm1vdmVIZWFsdGgiLCJucGNFbGVtIiwic3R5bGUiLCJ3aWR0aCIsImNvbmNhdCIsImlubmVySFRNTCIsIkZpZ2h0SW50ZXJmYWNlIiwiY2FudmFzIiwiY3R4IiwiZmlnaHRJbnRlcmZhY2VfY2xhc3NDYWxsQ2hlY2siLCJidWxsZXRTcGVlZCIsImJ1bGxldHMiLCJlbmVteSIsImdldEVuZW15U3ByaXRlcyIsImlzRGFtYWdlZCIsImlzSGVhbGVkIiwicGxheWVyIiwic3ByaXRlIiwiaGVpZ2h0IiwiZGFtYWdlIiwiaGVhbCIsIm9ya0hlYWx0aCIsImhlcm9IZWFsdGgiLCJoZXJvQ2xhc3NFbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwib3JrQ2xhc3NFbGVtZW50Iiwib3JrQm9keSIsImdldFJhbmRvbUludCIsImxlZnRMZWciLCJyaWdodExlZyIsInJpZ2h0SGFuZCIsImxlZnRIYW5kIiwibWluIiwicmFuZG9tIiwiX3RoaXMiLCJ5Iiwic2V0VGltZW91dCIsInB1c2giLCJfdGhpczIiLCJfdGhpczMiLCJ1cGRhdGUiLCJmb3JFYWNoIiwiYSIsInNwbGljZSIsImFsZXJ0IiwicmVzZXQiLCJlbnRpdHkiLCJzYXZlIiwidHJhbnNsYXRlIiwicmVuZGVyIiwicmVzdG9yZSIsImNsZWFyUmVjdCIsInJlbmRlckVudGl0eSIsInJlbmRlckVudGl0aWVzIiwibGlzdCIsIl90aGlzJGVuZW15IiwiYXBwbHkiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJib2R5U2l6ZVgiLCJib2R5U2l6ZVkiLCJjYW52YXNXaWR0aCIsImNhbnZhc0hlaWdodCIsInJlc291cmNlQ2FjaGUiLCJyZWFkeUNhbGxiYWNrcyIsImlzUmVhZHkiLCJyZWFkeSIsImtleXMiLCJrIiwibG9hZFVSTCIsImltZyIsIkltYWdlIiwib25sb2FkIiwiZnVuYyIsInNyYyIsImxvYWQiLCJ1cmxPckFyciIsIkFycmF5Iiwib25SZWFkeSIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJnZXRDb250ZXh0IiwiZ2FtZSIsInJlc291cmNlSGFuZGxlciIsImxhc3RUaW1lIiwibWFpbiIsIm5vdyIsIkRhdGUiLCJ1cGRhdGVFbnRpdGllcyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImdldEVsZW1lbnRCeUlkIiwib25jbGljayIsImZpcnN0Iiwic2Vjb25kIiwicmVzdWx0Iiwic2lnbiIsIl9nZXRUYXNrMiIsIl9zbGljZWRUb0FycmF5Iiwic2lnbnMiLCJiIiwiZ2V0VGFzayIsIm1ha2VTaG90IiwiYXR0YWNrSGVybyIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiY29kZSIsImhlYWxIZXJvIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMs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QU1DLEVBQVEsQ0FBQyxJQUFLLElBQUssS0FDbkIxRCxFQUFJeEYsRUFBT3lFLGFBQWEsRUFBRyxJQUMzQjBFLEVBQUluSixFQUFPeUUsYUFBYSxFQUFHLElBQzNCc0UsRUFBT0csRUFBTWxKLEVBQU95RSxhQUFhLEVBQUd5RSxFQUFNbEksU0FFNUM4SCxFQUFTLEVBQ2IsT0FBUUMsR0FDTixJQUFLLElBQ0hELEVBQVN0RCxFQUFJMkQsRUFDYixNQUNGLElBQUssSUFDSEwsRUFBU3RELEVBQUkyRCxFQUNiLE1BQ0YsSUFBSyxJQUNITCxFQUFTdEQsRUFBSTJELEVBS2pCLE1BQU8sQ0FmVSxlQWVDM0QsRUFBRzJELEVBQUdKLEVBQU1ELEdEdUJRTSxHQU5RLEdBTTdDN0ssRUFONkN5SyxFQUFBLEdBTXZDSixFQU51Q0ksRUFBQSxHQU1oQ0gsRUFOZ0NHLEVBQUEsR0FNeEJELEVBTndCQyxFQUFBLEdBTWxCRixFQU5rQkUsRUFBQSxHQU85QzNFLFNBQVNxRSxlQUFlLGtCQUFrQnhGLFVBQTFDLEdBQUFELE9BQXlEMUUsR0FBekQwRSxPQUFnRTJGLEdBQWhFM0YsT0FBd0U4RixHQUF4RTlGLE9BQStFNEYsR0FDL0V4RSxTQUFTcUUsZUFBZSxpQkFBaUJ6SixNQUF6QyxHQUFBZ0UsT0FBb0Q2RixJQUV0RHpFLFNBQVNxRSxlQUFlLFVBQVVDLFFBQVUsV0FDdEN0RSxTQUFTcUUsZUFBZSxpQkFBaUJ6SixRQUFVb0YsU0FBU3FFLGVBQWUsc0JBQXNCekosTUFDbkdpSixFQUFLbUIsV0FFTG5CLEVBQUtvQixjQUdUNUgsT0FBTzZILGlCQUFpQixVQUFXLFNBQUNDLEdBQ25CLFVBQVhBLEVBQUVDLE1BQW9CdkIsRUFBS3dCLGFBQzlCIiwiZmlsZSI6ImJhdHRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwcml0ZSB7XG4gIGNvbnN0cnVjdG9yKHVybCwgcG9zLCBzaXplLCBzcGVlZCwgZnJhbWVzLCBkaXIsIG9uY2UpIHtcbiAgICB0aGlzLnBvcyA9IHBvcztcbiAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgIHRoaXMuc3BlZWQgPSB0eXBlb2Ygc3BlZWQgPT09ICdudW1iZXInID8gc3BlZWQgOiAwO1xuICAgIHRoaXMuZnJhbWVzID0gZnJhbWVzO1xuICAgIHRoaXMuaW5kZXggPSAwO1xuICAgIHRoaXMudXJsID0gdXJsO1xuICAgIHRoaXMuZGlyID0gZGlyIHx8ICdob3Jpem9udGFsJztcbiAgICB0aGlzLm9uY2UgPSBvbmNlO1xuICB9XG5cbiAgdXBkYXRlKGR0KSB7XG4gICAgdGhpcy5pbmRleCArPSB0aGlzLnNwZWVkICogZHQ7XG4gIH1cblxuICByZW5kZXIodHgsIHJlc291cmNlcykge1xuICAgIGxldCBmcmFtZTtcblxuICAgIGlmICh0aGlzLnNwZWVkID4gMCkge1xuICAgICAgY29uc3QgbWF4ID0gdGhpcy5mcmFtZXMubGVuZ3RoO1xuICAgICAgY29uc3QgaWR4ID0gTWF0aC5mbG9vcih0aGlzLmluZGV4KTtcbiAgICAgIGZyYW1lID0gdGhpcy5mcmFtZXNbaWR4ICUgbWF4XTtcblxuICAgICAgaWYgKHRoaXMub25jZSAmJiBpZHggPj0gbWF4KSB7XG4gICAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZnJhbWUgPSAwO1xuICAgIH1cbiAgICBsZXQgeCA9IHRoaXMucG9zWzBdO1xuICAgIHggKz0gZnJhbWUgKiB0aGlzLnNpemVbMF07XG4gICAgdHguZHJhd0ltYWdlKHJlc291cmNlcy5nZXQodGhpcy51cmwpLFxuICAgICAgeCwgdGhpcy5wb3NbMV0sXG4gICAgICB0aGlzLnNpemVbMF0sIHRoaXMuc2l6ZVsxXSxcbiAgICAgIDAsIDAsXG4gICAgICB0aGlzLnNpemVbMF0sIHRoaXMuc2l6ZVsxXSk7XG4gIH1cbn1cbiIsIi8qKiBMb2FkIGFuZCBwbGF5IG11c2ljIGZpbGUgKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VBU291bmQocGF0aCkge1xuICBjb25zdCBhdWRpb0N0eCA9IG5ldyAod2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0KSgpO1xuICBjb25zdCBzb3VyY2UgPSBhdWRpb0N0eC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgZmV0Y2gocGF0aClcbiAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5hcnJheUJ1ZmZlcigpKVxuICAgIC50aGVuKChidWZmZXIpID0+IHtcbiAgICAgIGF1ZGlvQ3R4LmRlY29kZUF1ZGlvRGF0YShidWZmZXIsIChkZWNvZGVkRGF0YSkgPT4ge1xuICAgICAgICBzb3VyY2UuYnVmZmVyID0gZGVjb2RlZERhdGE7XG4gICAgICAgIHNvdXJjZS5jb25uZWN0KGF1ZGlvQ3R4LmRlc3RpbmF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLnRoZW4oKCkgPT4gc291cmNlLnN0YXJ0KDApKVxuICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbW92ZUhlYWx0aChucGNFbGVtLCB2YWx1ZSkge1xuICBucGNFbGVtLnN0eWxlLndpZHRoID0gYCR7dmFsdWUgLyAyfSVgO1xuICBucGNFbGVtLmlubmVySFRNTCA9IGAke3ZhbHVlICogMX0lYDtcbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1hbGVydCAqL1xuaW1wb3J0IFNwcml0ZSBmcm9tICcuL3Nwcml0ZSc7XG5pbXBvcnQgbWFrZUFTb3VuZCBmcm9tICcuL211c2ljSGFuZGxlcic7XG5pbXBvcnQgbW92ZUhlYWx0aCBmcm9tICcuL2NoYW5nZUhlYWx0aEJhcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpZ2h0SW50ZXJmYWNlIHtcbiAgY29uc3RydWN0b3IoY2FudmFzLCBjdHgsIHJlc291cmNlcykge1xuICAgIHRoaXMucmVzb3VyY2VzID0gcmVzb3VyY2VzO1xuICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xuICAgIHRoaXMuY3R4ID0gY3R4O1xuICAgIHRoaXMuYnVsbGV0U3BlZWQgPSA1MDA7XG4gICAgdGhpcy5idWxsZXRzID0gW107XG4gICAgdGhpcy5lbmVteSA9IEZpZ2h0SW50ZXJmYWNlLmdldEVuZW15U3ByaXRlcygpO1xuICAgIHRoaXMuaXNEYW1hZ2VkID0gZmFsc2U7XG4gICAgdGhpcy5pc0hlYWxlZCA9IGZhbHNlO1xuXG4gICAgdGhpcy5wbGF5ZXIgPSB7XG4gICAgICBzcHJpdGU6IG5ldyBTcHJpdGUoJ2ltZy9rbmlnaHQucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxMCwgWzAsIDEsIDIsIDMsIDQsIDUsIDZdKSxcbiAgICB9O1xuICAgIHRoaXMucGxheWVyLnBvcyA9IFsyNSwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMiAtIHRoaXMucGxheWVyLnNwcml0ZS5zaXplWzBdIC8gMl07XG4gICAgdGhpcy5kYW1hZ2UgPSB7XG4gICAgICBwb3M6IFsyNSwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMiAtIHRoaXMucGxheWVyLnNwcml0ZS5zaXplWzBdIC8gMl0sXG4gICAgICBzcHJpdGU6IG5ldyBTcHJpdGUoJ2ltZy9leHBsb3Npb24ucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxNSwgWzAsIDEsIDIsIDMsIDQsIDUsIDZdKSxcbiAgICB9O1xuICAgIHRoaXMuaGVhbCA9IHtcbiAgICAgIHBvczogWzI1LCB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyIC0gdGhpcy5wbGF5ZXIuc3ByaXRlLnNpemVbMF0gLyAyXSxcbiAgICAgIHNwcml0ZTogbmV3IFNwcml0ZSgnaW1nL2hlYWwucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxMCwgWzAsIDEsIDIsIDMsIDQsIDUsIDZdKSxcbiAgICB9O1xuICAgIHRoaXMub3JrSGVhbHRoID0gMTAwO1xuICAgIHRoaXMuaGVyb0hlYWx0aCA9IDEwMDtcbiAgICB0aGlzLmhlcm9DbGFzc0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVyb0xpZmUnKTtcbiAgICB0aGlzLm9ya0NsYXNzRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vcmtMaWZlJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0RW5lbXlTcHJpdGVzKCkge1xuICAgIGNvbnN0IG9ya1Nwcml0ZUxvY2F0aW9uID0gJ2ltZy9vcmtTcHJpdGUucG5nJztcbiAgICBjb25zdCBvcmtCb2R5ID0ge1xuICAgICAgcG9zOiBbMCwgMF0sXG4gICAgICBzcHJpdGU6XG4gICAgICAgICAgbmV3IFNwcml0ZShvcmtTcHJpdGVMb2NhdGlvbiwgWzIyMCAqIEZpZ2h0SW50ZXJmYWNlLmdldFJhbmRvbUludCgwLCAzKSwgOTM1XSwgWzIyMCwgMjQwXSksXG4gICAgfTtcbiAgICBjb25zdCBsZWZ0TGVnID0ge1xuICAgICAgcG9zOiBbMCwgMF0sXG4gICAgICBzcHJpdGU6XG4gICAgICAgICAgbmV3IFNwcml0ZShvcmtTcHJpdGVMb2NhdGlvbiwgWzg1ICogRmlnaHRJbnRlcmZhY2UuZ2V0UmFuZG9tSW50KDAsIDMpLCAwXSwgWzg1LCAxMjBdKSxcbiAgICB9O1xuICAgIGNvbnN0IHJpZ2h0TGVnID0ge1xuICAgICAgcG9zOiBbMCwgMF0sXG4gICAgICBzcHJpdGU6XG4gICAgICAgICAgbmV3IFNwcml0ZShvcmtTcHJpdGVMb2NhdGlvbiwgWzg1ICogRmlnaHRJbnRlcmZhY2UuZ2V0UmFuZG9tSW50KDAsIDMpLCAxMjBdLCBbODUsIDEyMF0pLFxuICAgIH07XG4gICAgY29uc3QgcmlnaHRIYW5kID0ge1xuICAgICAgcG9zOiBbMCwgMF0sXG4gICAgICBzcHJpdGU6XG4gICAgICAgICAgbmV3IFNwcml0ZShvcmtTcHJpdGVMb2NhdGlvbiwgWzIxOSAqIEZpZ2h0SW50ZXJmYWNlLmdldFJhbmRvbUludCgwLCAzKSwgMjQwXSwgWzIxOSwgMjgyXSksXG4gICAgfTtcbiAgICBjb25zdCBsZWZ0SGFuZCA9IHtcbiAgICAgIHBvczogWzAsIDBdLFxuICAgICAgc3ByaXRlOlxuICAgICAgICAgIG5ldyBTcHJpdGUob3JrU3ByaXRlTG9jYXRpb24sIFsxNjUgKiBGaWdodEludGVyZmFjZS5nZXRSYW5kb21JbnQoMCwgMyksIDcyMF0sIFsxNjUsIDIxMF0pLFxuICAgIH07XG4gICAgY29uc3QgaGVhZCA9IHtcbiAgICAgIHBvczogWzAsIDBdLFxuICAgICAgc3ByaXRlOlxuICAgICAgICAgIG5ldyBTcHJpdGUob3JrU3ByaXRlTG9jYXRpb24sIFsyMjAgKiBGaWdodEludGVyZmFjZS5nZXRSYW5kb21JbnQoMCwgMyksIDUyNV0sIFsyMjAsIDE5NV0pLFxuICAgIH07XG4gICAgcmV0dXJuIFtyaWdodExlZywgbGVmdExlZywgcmlnaHRIYW5kLCBvcmtCb2R5LCBoZWFkLCBsZWZ0SGFuZF07XG4gIH1cblxuICBzdGF0aWMgZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSArIG1pbjtcbiAgfVxuXG4gIG1ha2VTaG90KCkge1xuICAgIGNvbnN0IHggPSB0aGlzLnBsYXllci5wb3NbMF0gKyB0aGlzLnBsYXllci5zcHJpdGUuc2l6ZVswXSAvIDI7XG4gICAgY29uc3QgeSA9IHRoaXMucGxheWVyLnBvc1sxXTtcblxuICAgIHRoaXMucGxheWVyLnNwcml0ZSA9IG5ldyBTcHJpdGUoJ2ltZy9rbmlnaHRBdHRhY2sucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxNSwgWzAsIDEsIDIsIDMsIDQsIDVdKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMucGxheWVyLnNwcml0ZSA9IG5ldyBTcHJpdGUoJ2ltZy9rbmlnaHQucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxMCwgWzAsIDEsIDIsIDMsIDQsIDVdKTtcbiAgICAgIHRoaXMuYnVsbGV0cy5wdXNoKHtcbiAgICAgICAgcG9zOiBbeCwgeV0sXG4gICAgICAgIHNwcml0ZTogbmV3IFNwcml0ZSgnaW1nL2ZpcmUucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxMCwgWzAsIDEsIDIsIDMsIDQsIDVdKSxcbiAgICAgIH0pO1xuICAgIH0sIDMwMCk7XG4gICAgbWFrZUFTb3VuZCgnLi4vZ2FtZS9zb3VuZHMvaWNlYmFsbC53YXYnKTtcbiAgfVxuXG4gIGF0dGFja0hlcm8oKSB7XG4gICAgdGhpcy5oZXJvSGVhbHRoIC09IDI1O1xuICAgIGNvbnNvbGUubG9nKHRoaXMuaGVyb0hlYWx0aCk7XG4gICAgbW92ZUhlYWx0aCh0aGlzLmhlcm9DbGFzc0VsZW1lbnQsIHRoaXMuaGVyb0hlYWx0aCk7XG4gICAgdGhpcy5pc0RhbWFnZWQgPSB0cnVlO1xuICAgIHRoaXMucGxheWVyLnNwcml0ZSA9IG5ldyBTcHJpdGUoJ2ltZy9kYW1hZ2UucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxNSwgWzAsIDEsIDIsIDMsIDQsIDVdKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMucGxheWVyLnNwcml0ZSA9IG5ldyBTcHJpdGUoJ2ltZy9rbmlnaHQucG5nJywgWzAsIDBdLCBbMjU2LCAyNTZdLCAxMCwgWzAsIDEsIDIsIDMsIDQsIDVdKTtcbiAgICAgIHRoaXMuaXNEYW1hZ2VkID0gZmFsc2U7XG4gICAgfSwgMzAwKTtcbiAgICBtYWtlQVNvdW5kKCcuLi9nYW1lL3NvdW5kcy9xdWJvZHVwLUJhbmdTaG9ydC5vZ2cnKTtcbiAgfVxuXG4gIGhlYWxIZXJvKCkge1xuICAgIGlmICh0aGlzLmhlcm9IZWFsdGggIT09IDEwMCkge1xuICAgICAgdGhpcy5oZXJvSGVhbHRoICs9IDI1O1xuICAgICAgbW92ZUhlYWx0aCh0aGlzLmhlcm9DbGFzc0VsZW1lbnQsIHRoaXMuaGVyb0hlYWx0aCk7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmhlcm9IZWFsdGgpO1xuICAgIH1cbiAgICB0aGlzLmlzSGVhbGVkID0gdHJ1ZTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuaXNIZWFsZWQgPSBmYWxzZTtcbiAgICB9LCAxMDAwKTtcbiAgICBtYWtlQVNvdW5kKCcuLi9nYW1lL3NvdW5kcy9ibGVzc2luZy5vZ2cnKTtcbiAgfVxuXG4gIHVwZGF0ZUVudGl0aWVzKGR0KSB7XG4gICAgdGhpcy5wbGF5ZXIuc3ByaXRlLnVwZGF0ZShkdCk7XG5cbiAgICB0aGlzLmVuZW15LmZvckVhY2goYSA9PiBhLnNwcml0ZS51cGRhdGUoZHQpKTtcblxuICAgIHRoaXMuaGVhbC5zcHJpdGUudXBkYXRlKGR0KTtcbiAgICB0aGlzLmRhbWFnZS5zcHJpdGUudXBkYXRlKGR0KTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5idWxsZXRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0aGlzLmJ1bGxldHNbaV0ucG9zWzBdICs9IHRoaXMuYnVsbGV0U3BlZWQgKiBkdDtcbiAgICAgIHRoaXMuYnVsbGV0c1tpXS5zcHJpdGUudXBkYXRlKGR0KTtcbiAgICAgIGlmICh0aGlzLmJ1bGxldHNbaV0ucG9zWzBdID49IHRoaXMuZW5lbXlbMl0ucG9zWzBdKSB7XG4gICAgICAgIHRoaXMub3JrSGVhbHRoIC09IDI1O1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm9ya0hlYWx0aCk7XG4gICAgICAgIG1vdmVIZWFsdGgodGhpcy5vcmtDbGFzc0VsZW1lbnQsIHRoaXMub3JrSGVhbHRoKTtcbiAgICAgICAgdGhpcy5idWxsZXRzLnNwbGljZShpLCAxKTtcbiAgICAgICAgaSAtPSAxO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXRoaXMuaGVyb0hlYWx0aCkge1xuICAgICAgYWxlcnQoJ0xvc2UnKTtcbiAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLm9ya0hlYWx0aCkge1xuICAgICAgYWxlcnQoJ1dpbicpO1xuICAgICAgdGhpcy5yZXNldCgpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlckVudGl0eShlbnRpdHkpIHtcbiAgICB0aGlzLmN0eC5zYXZlKCk7XG4gICAgdGhpcy5jdHgudHJhbnNsYXRlKGVudGl0eS5wb3NbMF0sIGVudGl0eS5wb3NbMV0pO1xuICAgIGVudGl0eS5zcHJpdGUucmVuZGVyKHRoaXMuY3R4LCB0aGlzLnJlc291cmNlcyk7XG4gICAgdGhpcy5jdHgucmVzdG9yZSgpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTtcbiAgICB0aGlzLnJlbmRlckVudGl0eSh0aGlzLnBsYXllcik7XG4gICAgaWYgKHRoaXMuaXNEYW1hZ2VkKSB7XG4gICAgICB0aGlzLnJlbmRlckVudGl0eSh0aGlzLmRhbWFnZSk7XG4gICAgfVxuICAgIGlmICh0aGlzLmlzSGVhbGVkKSB7XG4gICAgICB0aGlzLnJlbmRlckVudGl0eSh0aGlzLmhlYWwpO1xuICAgIH1cbiAgICB0aGlzLnJlbmRlckVudGl0aWVzKHRoaXMuZW5lbXkpO1xuICAgIHRoaXMucmVuZGVyRW50aXRpZXModGhpcy5idWxsZXRzKTtcbiAgfVxuXG4gIHJlbmRlckVudGl0aWVzKGxpc3QpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRoaXMucmVuZGVyRW50aXR5KGxpc3RbaV0pO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMuaGVyb0hlYWx0aCA9IDEwMDtcbiAgICB0aGlzLm9ya0hlYWx0aCA9IDEwMDtcblxuICAgIHRoaXMuYnVsbGV0cyA9IFtdO1xuXG4gICAgdGhpcy5wbGF5ZXIucG9zID0gWzI1LCB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyIC0gdGhpcy5wbGF5ZXIuc3ByaXRlLnNpemVbMF0gLyAyXTtcbiAgICB0aGlzLmRhbWFnZS5wb3MgPSBbMjUsIHRoaXMuY2FudmFzLmhlaWdodCAvIDIgLSB0aGlzLnBsYXllci5zcHJpdGUuc2l6ZVswXSAvIDJdO1xuICAgIHRoaXMuaGVhbC5wb3MgPSBbMjUsIHRoaXMuY2FudmFzLmhlaWdodCAvIDIgLSB0aGlzLnBsYXllci5zcHJpdGUuc2l6ZVswXSAvIDJdO1xuXG4gICAgdGhpcy5lbmVteS5zcGxpY2UoMCwgdGhpcy5lbmVteS5sZW5ndGgpO1xuICAgIHRoaXMuZW5lbXkucHVzaCguLi5GaWdodEludGVyZmFjZS5nZXRFbmVteVNwcml0ZXMoKSk7XG5cbiAgICBjb25zdCBib2R5U2l6ZVggPSB0aGlzLmVuZW15WzNdLnNwcml0ZS5zaXplWzBdO1xuICAgIGNvbnN0IGJvZHlTaXplWSA9IHRoaXMuZW5lbXlbM10uc3ByaXRlLnNpemVbMV07XG4gICAgY29uc3QgY2FudmFzV2lkdGggPSB0aGlzLmNhbnZhcy53aWR0aDtcbiAgICBjb25zdCBjYW52YXNIZWlnaHQgPSB0aGlzLmNhbnZhcy5oZWlnaHQ7XG5cbiAgICB0aGlzLm9ya0NsYXNzRWxlbWVudC5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICB0aGlzLm9ya0NsYXNzRWxlbWVudC5pbm5lckhUTUwgPSAnMTAwJSc7XG4gICAgdGhpcy5oZXJvQ2xhc3NFbGVtZW50LnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAgIHRoaXMuaGVyb0NsYXNzRWxlbWVudC5pbm5lckhUTUwgPSAnMTAwJSc7XG5cbiAgICB0aGlzLmVuZW15WzNdLnBvcyA9IFtjYW52YXNXaWR0aCAtIGJvZHlTaXplWCAtIDIwMCwgY2FudmFzSGVpZ2h0IC8gMiAtIGJvZHlTaXplWSAvIDJdO1xuICAgIHRoaXMuZW5lbXlbMV0ucG9zID0gW2NhbnZhc1dpZHRoIC0gYm9keVNpemVYIC0gMTgwLCBjYW52YXNIZWlnaHQgLyAyIC0gYm9keVNpemVZIC8gMiArIDE4MF07XG4gICAgdGhpcy5lbmVteVswXS5wb3MgPSBbY2FudmFzV2lkdGggLSBib2R5U2l6ZVggLSA5MCwgY2FudmFzSGVpZ2h0IC8gMiAtIGJvZHlTaXplWSAvIDIgKyAxODBdO1xuICAgIHRoaXMuZW5lbXlbMl0ucG9zID0gW2NhbnZhc1dpZHRoIC0gYm9keVNpemVYIC0gMzYwLCBjYW52YXNIZWlnaHQgLyAyIC0gYm9keVNpemVZIC8gMiArIDIwXTtcbiAgICB0aGlzLmVuZW15WzVdLnBvcyA9IFtjYW52YXNXaWR0aCAtIGJvZHlTaXplWCAtIDQ1LCBjYW52YXNIZWlnaHQgLyAyIC0gYm9keVNpemVZIC8gMiArIDQwXTtcbiAgICB0aGlzLmVuZW15WzRdLnBvcyA9IFtjYW52YXNXaWR0aCAtIGJvZHlTaXplWCAtIDIxMCwgY2FudmFzSGVpZ2h0IC8gMiAtIGJvZHlTaXplWSAvIDIgLSA4MF07XG4gIH1cbn1cbiIsIlxuY29uc3QgcmVzb3VyY2VDYWNoZSA9IHt9O1xuY29uc3QgcmVhZHlDYWxsYmFja3MgPSBbXTtcblxuXG5mdW5jdGlvbiBpc1JlYWR5KCkge1xuICBsZXQgcmVhZHkgPSB0cnVlO1xuICBPYmplY3Qua2V5cyhyZXNvdXJjZUNhY2hlKS5mb3JFYWNoKChrKSA9PiB7XG4gICAgaWYgKHJlc291cmNlQ2FjaGUuaGFzT3duUHJvcGVydHkoaylcbiAgICAgICAgICAgICAgJiYgIXJlc291cmNlQ2FjaGVba10pIHtcbiAgICAgIHJlYWR5ID0gZmFsc2U7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlYWR5O1xufVxuXG5mdW5jdGlvbiBsb2FkVVJMKHVybCkge1xuICBpZiAocmVzb3VyY2VDYWNoZVt1cmxdKSB7XG4gICAgcmV0dXJuIHJlc291cmNlQ2FjaGVbdXJsXTtcbiAgfVxuXG4gIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgIHJlc291cmNlQ2FjaGVbdXJsXSA9IGltZztcbiAgICBpZiAoaXNSZWFkeSgpKSB7XG4gICAgICByZWFkeUNhbGxiYWNrcy5mb3JFYWNoKChmdW5jKSA9PiB7IGZ1bmMoKTsgfSk7XG4gICAgfVxuICB9O1xuICByZXNvdXJjZUNhY2hlW3VybF0gPSBmYWxzZTtcbiAgaW1nLnNyYyA9IHVybDtcbn1cbi8vIExvYWQgYW4gaW1hZ2UgdXJsIG9yIGFuIGFycmF5IG9mIGltYWdlIHVybHNcbmZ1bmN0aW9uIGxvYWQodXJsT3JBcnIpIHtcbiAgaWYgKHVybE9yQXJyIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICB1cmxPckFyci5mb3JFYWNoKCh1cmwpID0+IHtcbiAgICAgIGxvYWRVUkwodXJsKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBsb2FkVVJMKHVybE9yQXJyKTtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIGdldCh1cmwpIHtcbiAgcmV0dXJuIHJlc291cmNlQ2FjaGVbdXJsXTtcbn1cblxuZnVuY3Rpb24gb25SZWFkeShmdW5jKSB7XG4gIHJlYWR5Q2FsbGJhY2tzLnB1c2goZnVuYyk7XG59XG5jb25zdCByZXNvdXJjZXMgPSB7XG4gIGxvYWQsXG4gIGdldCxcbiAgb25SZWFkeSxcbiAgaXNSZWFkeSxcbn07XG5leHBvcnQgZGVmYXVsdCByZXNvdXJjZXM7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuaW1wb3J0IEZpZ2h0SW50ZXJmYWNlIGZyb20gJy4vZmlnaHRJbnRlcmZhY2UnO1xuaW1wb3J0IHJlc291cmNlSGFuZGxlciBmcm9tICcuL3Jlc291cmNlSGFuZGxlcic7XG5pbXBvcnQgZ2V0VGFzayBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3NpbXBsZU1hdGgvY3JlYXRlVGFzayc7XG5cbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuY2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGggKiAwLjc1O1xuY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuNzU7XG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XG5cbmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuY29uc3QgZ2FtZSA9IG5ldyBGaWdodEludGVyZmFjZShjYW52YXMsIGN0eCwgcmVzb3VyY2VIYW5kbGVyKTtcblxubGV0IGxhc3RUaW1lID0gMDtcbmZ1bmN0aW9uIG1haW4oKSB7XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIGNvbnN0IGR0ID0gKG5vdyAtIGxhc3RUaW1lKSAvIDEwMDAuMDtcbiAgZ2FtZS51cGRhdGVFbnRpdGllcyhkdCk7XG4gIGdhbWUucmVuZGVyKCk7XG4gIGxhc3RUaW1lID0gbm93O1xuICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobWFpbik7XG59XG5mdW5jdGlvbiBpbml0KCkge1xuICBnYW1lLnJlc2V0KCk7XG4gIGxhc3RUaW1lID0gRGF0ZS5ub3coKTtcbiAgbWFpbigpO1xufVxuXG5yZXNvdXJjZUhhbmRsZXIubG9hZChbXG4gICdpbWcvaGVhbC5wbmcnLFxuICAnaW1nL2V4cGxvc2lvbi5wbmcnLFxuICAnaW1nL2RhbWFnZS5wbmcnLFxuICAnaW1nL2tuaWdodC5wbmcnLFxuICAnaW1nL2ZpcmUucG5nJyxcbiAgJ2ltZy9rbmlnaHRBdHRhY2sucG5nJyxcbiAgJ2ltZy9vcmtTcHJpdGUucG5nJyxcbl0pO1xucmVzb3VyY2VIYW5kbGVyLm9uUmVhZHkoaW5pdCk7XG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrJykub25jbGljayA9ICgpID0+IHtcbiAgbGV0IG5hbWU7XG4gIGxldCBmaXJzdDtcbiAgbGV0IHNlY29uZDtcbiAgbGV0IHJlc3VsdDtcbiAgbGV0IHNpZ247XG4gIFtuYW1lLCBmaXJzdCwgc2Vjb25kLCBzaWduLCByZXN1bHRdID0gZ2V0VGFzaygpO1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza01vZGVsTGFiZWwnKS5pbm5lckhUTUwgPSBgJHtuYW1lfSR7Zmlyc3R9JHtzaWdufSR7c2Vjb25kfWA7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoaWRkZW4tcmVzdWx0JykudmFsdWUgPSBgJHtyZXN1bHR9YDtcbn07XG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0Jykub25jbGljayA9ICgpID0+IHtcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoaWRkZW4tcmVzdWx0JykudmFsdWUgPT09IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFtcGxlSW5wdXRFbWFpbDEnKS52YWx1ZSkge1xuICAgIGdhbWUubWFrZVNob3QoKTtcbiAgfSBlbHNlIHtcbiAgICBnYW1lLmF0dGFja0hlcm8oKTtcbiAgfVxufTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgaWYgKGUuY29kZSA9PT0gJ1NwYWNlJykgeyBnYW1lLmhlYWxIZXJvKCk7IH1cbn0sIGZhbHNlKTtcbiIsImltcG9ydCBTcHJpdGUgZnJvbSAnLi4vLi4vc2NyZWVuL2dhbWUvanMvZmlnaHRJbnRlcmZhY2UnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUYXNrKCkge1xuICBjb25zdCBzaWducyA9IFsnKicsICctJywgJysnXTtcbiAgY29uc3QgYSA9IFNwcml0ZS5nZXRSYW5kb21JbnQoMSwgMTApO1xuICBjb25zdCBiID0gU3ByaXRlLmdldFJhbmRvbUludCgxLCAxMCk7XG4gIGNvbnN0IHNpZ24gPSBzaWduc1tTcHJpdGUuZ2V0UmFuZG9tSW50KDAsIHNpZ25zLmxlbmd0aCldO1xuICBjb25zdCB0YXNrTmFtZSA9ICdTb2x2ZSB0YXNrOiAnO1xuICBsZXQgcmVzdWx0ID0gMDtcbiAgc3dpdGNoIChzaWduKSB7XG4gICAgY2FzZSAnKic6XG4gICAgICByZXN1bHQgPSBhICogYjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJy0nOlxuICAgICAgcmVzdWx0ID0gYSAtIGI7XG4gICAgICBicmVhaztcbiAgICBjYXNlICcrJzpcbiAgICAgIHJlc3VsdCA9IGEgKyBiO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBbdGFza05hbWUsIGEsIGIsIHNpZ24sIHJlc3VsdF07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9
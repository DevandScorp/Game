!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}n.r(t);var r=function(){function e(t,n,i,r,s,o,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pos=n,this.size=i,this.speed="number"==typeof r?r:0,this.frames=s,this.index=0,this.url=t,this.dir=o||"horizontal",this.once=a}var t,n,r;return t=e,(n=[{key:"update",value:function(e){this.index+=this.speed*e}},{key:"render",value:function(e,t){var n;if(this.speed>0){var i=this.frames.length,r=Math.floor(this.index);if(n=this.frames[r%i],this.once&&r>=i)return void(this.done=!0)}else n=0;var s=this.pos[0];s+=n*this.size[0],e.drawImage(t.get(this.url),s,this.pos[1],this.size[0],this.size[1],0,0,this.size[0],this.size[1])}}])&&i(t.prototype,n),r&&i(t,r),e}();function s(e){var t=new(window.AudioContext||window.webkitAudioContext),n=t.createBufferSource();fetch(e).then(function(e){return e.arrayBuffer()}).then(function(e){t.decodeAudioData(e,function(e){n.buffer=e,n.connect(t.destination)})}).then(function(){return n.start(0)}).catch(function(e){return console.log(e)})}function o(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function a(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var h=function(){function e(t,n,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.resources=i,this.canvas=t,this.ctx=n,this.bulletSpeed=500,this.bullets=[],this.enemy=e.getEnemySprites(),this.player={pos:[0,0],sprite:new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5,6])},this.isDamaged=!1,this.isHealed=!1,this.damage={pos:[0,0],sprite:new r("img/explosion.png",[0,0],[256,256],15,[0,1,2,3,4,5,6])},this.heal={pos:[0,0],sprite:new r("img/heal.png",[0,0],[256,256],10,[0,1,2,3,4,5,6])},this.orkHealth=100,this.heroHealth=100}var t,n,i;return t=e,i=[{key:"getEnemySprites",value:function(){var t={pos:[0,0],sprite:new r("img/orkSprite.png",[220*e.getRandomInt(0,3),935],[220,240])},n={pos:[0,0],sprite:new r("img/orkSprite.png",[85*e.getRandomInt(0,3),0],[85,120])},i={pos:[0,0],sprite:new r("img/orkSprite.png",[85*e.getRandomInt(0,3),120],[85,120])},s={pos:[0,0],sprite:new r("img/orkSprite.png",[219*e.getRandomInt(0,3),240],[219,282])},o={pos:[0,0],sprite:new r("img/orkSprite.png",[165*e.getRandomInt(0,3),720],[165,210])};return[i,n,s,t,{pos:[0,0],sprite:new r("img/orkSprite.png",[220*e.getRandomInt(0,3),525],[220,195])},o]}},{key:"getRandomInt",value:function(e,t){return Math.floor(Math.random()*(t-e))+e}}],(n=[{key:"makeShot",value:function(){var e=this,t=this.player.pos[0]+this.player.sprite.size[0]/2,n=this.player.pos[1];this.player.sprite=new r("img/knightAttack.png",[0,0],[256,256],15,[0,1,2,3,4,5]),setTimeout(function(){e.player.sprite=new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5]),e.bullets.push({pos:[t,n],sprite:new r("img/fire.png",[0,0],[256,256],10,[0,1,2,3,4,5])})},300),s("../game/sounds/iceball.wav")}},{key:"attackHero",value:function(){var e=this;this.heroHealth-=25,console.log(this.heroHealth),this.isDamaged=!0,this.player.sprite=new r("img/damage.png",[0,0],[256,256],15,[0,1,2,3,4,5]),setTimeout(function(){e.player.sprite=new r("img/knight.png",[0,0],[256,256],10,[0,1,2,3,4,5]),e.isDamaged=!1},300),s("../game/sounds/qubodup-BangShort.ogg")}},{key:"healHero",value:function(){var e=this;100!==this.heroHealth&&(this.heroHealth+=25,console.log(this.heroHealth)),this.isHealed=!0,setTimeout(function(){e.isHealed=!1},1e3),s("../game/sounds/blessing.ogg")}},{key:"updateEntities",value:function(e){this.player.sprite.update(e),this.enemy.forEach(function(t){return t.sprite.update(e)}),this.heal.sprite.update(e),this.damage.sprite.update(e);for(var t=0;t<this.bullets.length;t+=1)this.bullets[t].pos[0]+=this.bulletSpeed*e,this.bullets[t].sprite.update(e),this.bullets[t].pos[0]>=this.enemy[2].pos[0]&&(this.orkHealth-=25,console.log(this.orkHealth),this.bullets.splice(t,1),t-=1);this.heroHealth||(alert("Lose"),this.reset()),this.orkHealth||(alert("Win"),this.reset())}},{key:"renderEntity",value:function(e){this.ctx.save(),this.ctx.translate(e.pos[0],e.pos[1]),e.sprite.render(this.ctx,this.resources),this.ctx.restore()}},{key:"render",value:function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.renderEntity(this.player),this.isDamaged&&this.renderEntity(this.damage),this.isHealed&&this.renderEntity(this.heal),this.renderEntities(this.enemy),this.renderEntities(this.bullets)}},{key:"renderEntities",value:function(e){for(var t=0;t<e.length;t+=1)this.renderEntity(e[t])}},{key:"reset",value:function(){var t;this.heroHealth=100,this.orkHealth=100,this.bullets=[],this.player.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.damage.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.heal.pos=[25,this.canvas.height/2-this.player.sprite.size[0]/2],this.enemy.splice(0,this.enemy.length),(t=this.enemy).push.apply(t,o(e.getEnemySprites()));var n=this.enemy[3].sprite.size[0],i=this.enemy[3].sprite.size[1],r=this.canvas.width,s=this.canvas.height;this.enemy[3].pos=[r-n-200,s/2-i/2],this.enemy[1].pos=[r-n-180,s/2-i/2+180],this.enemy[0].pos=[r-n-90,s/2-i/2+180],this.enemy[2].pos=[r-n-360,s/2-i/2+20],this.enemy[5].pos=[r-n-45,s/2-i/2+40],this.enemy[4].pos=[r-n-210,s/2-i/2-80]}}])&&a(t.prototype,n),i&&a(t,i),e}(),u={},l=[];function p(){var e=!0;return Object.keys(u).forEach(function(t){u.hasOwnProperty(t)&&!u[t]&&(e=!1)}),e}function c(e){if(u[e])return u[e];var t=new Image;t.onload=function(){u[e]=t,p()&&l.forEach(function(e){e()})},u[e]=!1,t.src=e}var f={load:function(e){e instanceof Array?e.forEach(function(e){c(e)}):c(e)},get:function(e){return u[e]},onReady:function(e){l.push(e)},isReady:p},d=document.createElement("canvas");d.width=window.innerWidth,d.height=window.innerHeight,document.body.appendChild(d);var g=d.getContext("2d"),m=new h(d,g,f),y=0;function v(){var e=Date.now(),t=(e-y)/1e3;m.updateEntities(t),m.render(),y=e,requestAnimationFrame(v)}f.load(["img/heal.png","img/explosion.png","img/damage.png","img/knight.png","img/fire.png","img/knightAttack.png","img/orkSprite.png"]),f.onReady(function(){m.reset(),y=Date.now(),v()}),window.addEventListener("click",function(){m.makeShot()},!1),window.addEventListener("contextmenu",function(e){e.preventDefault(),m.attackHero()},!1),window.addEventListener("keydown",function(e){"Space"===e.code&&m.healHero()},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,